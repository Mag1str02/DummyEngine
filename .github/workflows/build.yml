name: Build Checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  BuildWindows:
    runs-on: windows-latest

    strategy:
      fail-fast: false

      matrix:
        build_type: [RelWithDebInfo]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Install clang
      uses: msys2/setup-msys2@v2
      with:
        location: D:\
        update: true
        install: >-
          mingw-w64-clang-x86_64-clang
          mingw-w64-clang-x86_64-ninja
    - name: Add msys to path
      run: |
        echo "D:\msys64\clang64\bin\" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
    - name: Build
      uses: threeal/cmake-action@v2.0.0
      with:
        source-dir: ${{ github.workspace }}
        build-dir: ${{ github.workspace }}/build
        generator: Ninja
        cxx-compiler: clang++
        c-compiler: clang
        build-args: --target DummyEditor --parallel 16 --config ${{ matrix.build_type }}
        options: CMAKE_BUILD_TYPE=${{ matrix.build_type }}
  BuildUbuntu:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        build_type: [RelWithDebInfo]
        c_compiler: [clang-19]
        cpp_compiler: [clang++-19]

    steps:
    - name: Install Packages
      run: |
        sudo apt update
        sudo apt install libwayland-dev libxkbcommon-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgtk-3-dev
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 19 all
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Build
      uses: threeal/cmake-action@v2.0.0
      with:
        source-dir: ${{ github.workspace }}
        build-dir: ${{ github.workspace }}/build
        generator: Unix Makefiles
        cxx-compiler: ${{ matrix.cpp_compiler }}
        c-compiler: ${{ matrix.c_compiler }}
        build-args: --target DummyEditor --parallel 16 --config ${{ matrix.build_type }}
        options: CMAKE_BUILD_TYPE=${{ matrix.build_type }}